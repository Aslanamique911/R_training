Sure! Below is a **comprehensive guide with R code** to generate different types of plots, including **bar plots, volcano plots, violin plots, and gganato plots** using **both base R and `ggplot2`**.

---

# **ðŸ“Œ 1. Bar Plot**
## **ðŸ”¹ Base R**
```r
# Sample data
data <- data.frame(Category = c("A", "B", "C", "D"), Value = c(10, 15, 7, 20))

# Base R Bar Plot
barplot(data$Value, names.arg = data$Category, col = "skyblue",
        main = "Base R Bar Plot", xlab = "Category", ylab = "Value", border = "black")
```

## **ðŸ”¹ ggplot2**
```r
library(ggplot2)

# ggplot2 Bar Plot
ggplot(data, aes(x = Category, y = Value, fill = Category)) +
  geom_bar(stat = "identity", color = "black") +
  theme_minimal() +
  labs(title = "ggplot2 Bar Plot", x = "Category", y = "Value")
```

---

# **ðŸ“Œ 2. Volcano Plot** (For **Differential Expression Analysis**)
## **ðŸ”¹ ggplot2**
```r
library(ggplot2)

# Sample data
set.seed(123)
df <- data.frame(
  logFC = rnorm(1000, mean = 0, sd = 2),   # Log Fold Change
  pval = runif(1000, min = 0, max = 1)     # P-value
)

df$Significance <- ifelse(df$pval < 0.05 & abs(df$logFC) > 1, "Significant", "Not Significant")

# Volcano plot
ggplot(df, aes(x = logFC, y = -log10(pval), color = Significance)) +
  geom_point(alpha = 0.6) +
  scale_color_manual(values = c("red", "black")) +
  theme_minimal() +
  labs(title = "Volcano Plot", x = "Log Fold Change", y = "-log10(P-value)")
```

---

# **ðŸ“Œ 3. Violin Plot** (For **Distribution Comparison**)
## **ðŸ”¹ ggplot2**
```r
library(ggplot2)

# Sample data
set.seed(123)
data <- data.frame(
  Group = rep(c("A", "B", "C"), each = 100),
  Value = c(rnorm(100, mean = 5, sd = 2),
            rnorm(100, mean = 7, sd = 2),
            rnorm(100, mean = 9, sd = 2))
)

# Violin plot
ggplot(data, aes(x = Group, y = Value, fill = Group)) +
  geom_violin(trim = FALSE) +
  geom_boxplot(width = 0.2, color = "black", fill = "white", outlier.shape = NA) + # Adding Boxplot inside
  theme_minimal() +
  labs(title = "Violin Plot", x = "Group", y = "Value")
```

---

# **ðŸ“Œ 4. Gganato Plot** (Genome Ideograms)
**`gganatogram` is used to visualize anatomical structures.**
## **ðŸ”¹ gganatogram**
```r
# Install if not already installed
# install.packages("gganatogram")
library(gganatogram)

# Load sample data
data("hgMale_key")

# Generate an anatogram
gganatogram(data = hgMale_key, fillOutline = "black", organism = "human", sex = "male") +
  theme_void() +
  labs(title = "Human Male Anatomical Diagram")
```

---

# **ðŸ“Œ 5. Scatter Plot**
## **ðŸ”¹ Base R**
```r
set.seed(123)
x <- rnorm(100)
y <- x + rnorm(100, sd = 0.5)

# Scatter Plot in Base R
plot(x, y, pch = 16, col = "blue", main = "Base R Scatter Plot", xlab = "X values", ylab = "Y values")
```

## **ðŸ”¹ ggplot2**
```r
ggplot(data.frame(x, y), aes(x, y)) +
  geom_point(color = "blue") +
  theme_minimal() +
  labs(title = "ggplot2 Scatter Plot", x = "X values", y = "Y values")
```

---

# **ðŸ“Œ 6. Line Plot**
## **ðŸ”¹ Base R**
```r
x <- seq(1, 10, by = 1)
y <- x^2

plot(x, y, type = "l", col = "red", lwd = 2, main = "Base R Line Plot", xlab = "X", ylab = "Y")
```

## **ðŸ”¹ ggplot2**
```r
ggplot(data.frame(x, y), aes(x, y)) +
  geom_line(color = "red", size = 1.2) +
  theme_minimal() +
  labs(title = "ggplot2 Line Plot", x = "X", y = "Y")
```

---

# **ðŸ“Œ 7. Histogram**
## **ðŸ”¹ Base R**
```r
hist(rnorm(1000), col = "lightblue", border = "black",
     main = "Base R Histogram", xlab = "Value", ylab = "Frequency")
```

## **ðŸ”¹ ggplot2**
```r
ggplot(data.frame(Value = rnorm(1000)), aes(Value)) +
  geom_histogram(fill = "lightblue", color = "black", bins = 30) +
  theme_minimal() +
  labs(title = "ggplot2 Histogram", x = "Value", y = "Frequency")
```

---

# **ðŸ“Œ 8. Boxplot**
## **ðŸ”¹ Base R**
```r
boxplot(mpg ~ cyl, data = mtcars, col = c("red", "blue", "green"), 
        main = "Base R Boxplot", xlab = "Cylinders", ylab = "MPG")
```

## **ðŸ”¹ ggplot2**
```r
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(cyl))) +
  geom_boxplot() +
  theme_minimal() +
  labs(title = "ggplot2 Boxplot", x = "Cylinders", y = "MPG")
```

---

# **ðŸ“Œ 9. Heatmap**
## **ðŸ”¹ Base R**
```r
heatmap(matrix(rnorm(100), 10, 10), col = heat.colors(10), main = "Base R Heatmap")
```

## **ðŸ”¹ ggplot2 (Using `geom_tile`)**
```r
library(reshape2)

# Sample matrix data
data_matrix <- matrix(rnorm(100), nrow = 10)
rownames(data_matrix) <- paste("Gene", 1:10, sep = "")
colnames(data_matrix) <- paste("Sample", 1:10, sep = "")

# Convert matrix to long format
df <- melt(data_matrix)

# Heatmap using ggplot2
ggplot(df, aes(Var1, Var2, fill = value)) +
  geom_tile() +
  scale_fill_gradient(low = "white", high = "red") +
  theme_minimal() +
  labs(title = "ggplot2 Heatmap", x = "Genes", y = "Samples")
```

---

### **âœ¨ Conclusion**
- âœ… **Base R** is simpler for quick plots.
- âœ… **ggplot2** is more customizable and publication-quality.
- âœ… **Specialized plots** like **volcano plots, violin plots, and gganatogram** require **specific libraries**.

Would you like **further customizations** for any of these plots? ðŸ˜Š
